#include<iostream>
using namespace std;
class fraction {
	//поля класса
	double chislo;

	//методы класса
public:
	fraction(double n) :chislo(n) {}  //вызываем конструктор
	fraction() :chislo(0) {}  //вызываем конструктор

	//бинарные операторы +,-,*,/
	double operator+(const fraction& x) {     //операция сложения
		return this->chislo + x.chislo;

	}
	double operator-(const fraction& x) {     //операция вычитания
	
		return this->chislo - x.chislo;

	}
	double operator*(const fraction& x) {     //операция сложения
		
		return this->chislo * x.chislo;

	}
	double operator/(const fraction& x) {     //операция сложения
	
		return this->chislo / x.chislo;

	}
	

	//унарные операторы ++value, value++
	fraction operator++() {     //префиксная форма инкремента
		++chislo;
		return *this;
	}
	fraction operator++(int) {  //постфиксная форма инкремента
		chislo++;          //int это сигнал для уомпилятора, что это постфиксная версия инкремента
		return *this;
	}

	void show() {
		cout << chislo << endl;
	}
};
int main() {
	setlocale(LC_ALL, "rus");
	int val1, val2;
	cout << "введите значение для 'a': "; cin >> val1;
	cout << "введите значение для 'b': "; cin >> val2;
	fraction a(val1), b(val2),c(0),d(0);

	cout << "'a + b' : " << a + b << endl;
	cout << "'a - b' : " << a - b << endl;
	cout << "'a * b' : " << a * b << endl;
	cout << "'a / b' : " << a / b << endl;
	c = a + b - 2;
	d = a / b + 4;
	cout << "'c = a + b - 2' : " << a + b - 2 << endl;
	cout << "'d = a / b + 4' : " << a / b + 4 << endl;
	
	cout << "префикс 'c' : "; ++c; c.show();
	cout << "постфикс 'c' : "; c++; c.show();
	cout << "a : "; a.show();
	cout << "b : "; b.show();
	cout << "c : "; c.show();
	cout << "d : "; d.show();
	cout << "a / b + c / d : " << a / b + c / d << endl;
	cout << "b * c / 2 : " << b * c / 2 << endl;
	
	system("pause>null");
	return 0;
}